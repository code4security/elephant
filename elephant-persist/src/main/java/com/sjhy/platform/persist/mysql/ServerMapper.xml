<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjhy.platform.persist.mysql.ServerMapper" >

    <resultMap id="BaseResultMap" type="com.sjhy.platform.client.dto.base.Server" >
        <id column="server_id" property="serverId" jdbcType="INTEGER" />
        <result column="language" property="language" jdbcType="VARBINARY" />
        <result column="name" property="name" jdbcType="VARBINARY" />
        <result column="is_available" property="isAvailable" jdbcType="BIT" />
        <result column="recommend" property="recommend" jdbcType="SMALLINT" />
        <result column="ip" property="ip" jdbcType="VARBINARY" />
        <result column="ip_internal" property="ipInternal" jdbcType="VARCHAR" />
        <result column="port_number" property="portNumber" jdbcType="INTEGER" />
        <result column="start_url" property="startUrl" jdbcType="VARCHAR" />
        <result column="version_num" property="versionNum" jdbcType="VARBINARY" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        server_id, language, name, is_available, recommend, ip, ip_internal, port_number, 
        start_url, version_num
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sjhy.platform.client.dto.base.ServerExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from server
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from server
        where server_id = #{serverId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from server
        where server_id = #{serverId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.sjhy.platform.client.dto.base.ServerExample" >
        delete from server
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.sjhy.platform.client.dto.base.Server" >
        insert into server (server_id, language, name, 
            is_available, recommend, ip, 
            ip_internal, port_number, start_url, 
            version_num)
        values (#{serverId,jdbcType=INTEGER}, #{language,jdbcType=VARBINARY}, #{name,jdbcType=VARBINARY}, 
            #{isAvailable,jdbcType=BIT}, #{recommend,jdbcType=SMALLINT}, #{ip,jdbcType=VARBINARY}, 
            #{ipInternal,jdbcType=VARCHAR}, #{portNumber,jdbcType=INTEGER}, #{startUrl,jdbcType=VARCHAR}, 
            #{versionNum,jdbcType=VARBINARY})
    </insert>

    <insert id="insertSelective" parameterType="com.sjhy.platform.client.dto.base.Server" >
        insert into server
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="serverId != null" >
                server_id,
            </if>
            <if test="language != null" >
                language,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="isAvailable != null" >
                is_available,
            </if>
            <if test="recommend != null" >
                recommend,
            </if>
            <if test="ip != null" >
                ip,
            </if>
            <if test="ipInternal != null" >
                ip_internal,
            </if>
            <if test="portNumber != null" >
                port_number,
            </if>
            <if test="startUrl != null" >
                start_url,
            </if>
            <if test="versionNum != null" >
                version_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="serverId != null" >
                #{serverId,jdbcType=INTEGER},
            </if>
            <if test="language != null" >
                #{language,jdbcType=VARBINARY},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARBINARY},
            </if>
            <if test="isAvailable != null" >
                #{isAvailable,jdbcType=BIT},
            </if>
            <if test="recommend != null" >
                #{recommend,jdbcType=SMALLINT},
            </if>
            <if test="ip != null" >
                #{ip,jdbcType=VARBINARY},
            </if>
            <if test="ipInternal != null" >
                #{ipInternal,jdbcType=VARCHAR},
            </if>
            <if test="portNumber != null" >
                #{portNumber,jdbcType=INTEGER},
            </if>
            <if test="startUrl != null" >
                #{startUrl,jdbcType=VARCHAR},
            </if>
            <if test="versionNum != null" >
                #{versionNum,jdbcType=VARBINARY},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.sjhy.platform.client.dto.base.ServerExample" resultType="java.lang.Integer" >
        select count(*) from server
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update server
        <set >
            <if test="record.serverId != null" >
                server_id = #{record.serverId,jdbcType=INTEGER},
            </if>
            <if test="record.language != null" >
                language = #{record.language,jdbcType=VARBINARY},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARBINARY},
            </if>
            <if test="record.isAvailable != null" >
                is_available = #{record.isAvailable,jdbcType=BIT},
            </if>
            <if test="record.recommend != null" >
                recommend = #{record.recommend,jdbcType=SMALLINT},
            </if>
            <if test="record.ip != null" >
                ip = #{record.ip,jdbcType=VARBINARY},
            </if>
            <if test="record.ipInternal != null" >
                ip_internal = #{record.ipInternal,jdbcType=VARCHAR},
            </if>
            <if test="record.portNumber != null" >
                port_number = #{record.portNumber,jdbcType=INTEGER},
            </if>
            <if test="record.startUrl != null" >
                start_url = #{record.startUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.versionNum != null" >
                version_num = #{record.versionNum,jdbcType=VARBINARY},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update server
        set server_id = #{record.serverId,jdbcType=INTEGER},
            language = #{record.language,jdbcType=VARBINARY},
            name = #{record.name,jdbcType=VARBINARY},
            is_available = #{record.isAvailable,jdbcType=BIT},
            recommend = #{record.recommend,jdbcType=SMALLINT},
            ip = #{record.ip,jdbcType=VARBINARY},
            ip_internal = #{record.ipInternal,jdbcType=VARCHAR},
            port_number = #{record.portNumber,jdbcType=INTEGER},
            start_url = #{record.startUrl,jdbcType=VARCHAR},
            version_num = #{record.versionNum,jdbcType=VARBINARY}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.sjhy.platform.client.dto.base.Server" >
        update server
        <set >
            <if test="language != null" >
                language = #{language,jdbcType=VARBINARY},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARBINARY},
            </if>
            <if test="isAvailable != null" >
                is_available = #{isAvailable,jdbcType=BIT},
            </if>
            <if test="recommend != null" >
                recommend = #{recommend,jdbcType=SMALLINT},
            </if>
            <if test="ip != null" >
                ip = #{ip,jdbcType=VARBINARY},
            </if>
            <if test="ipInternal != null" >
                ip_internal = #{ipInternal,jdbcType=VARCHAR},
            </if>
            <if test="portNumber != null" >
                port_number = #{portNumber,jdbcType=INTEGER},
            </if>
            <if test="startUrl != null" >
                start_url = #{startUrl,jdbcType=VARCHAR},
            </if>
            <if test="versionNum != null" >
                version_num = #{versionNum,jdbcType=VARBINARY},
            </if>
        </set>
        where server_id = #{serverId,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.sjhy.platform.client.dto.base.Server" >
        update server
        set language = #{language,jdbcType=VARBINARY},
            name = #{name,jdbcType=VARBINARY},
            is_available = #{isAvailable,jdbcType=BIT},
            recommend = #{recommend,jdbcType=SMALLINT},
            ip = #{ip,jdbcType=VARBINARY},
            ip_internal = #{ipInternal,jdbcType=VARCHAR},
            port_number = #{portNumber,jdbcType=INTEGER},
            start_url = #{startUrl,jdbcType=VARCHAR},
            version_num = #{versionNum,jdbcType=VARBINARY}
        where server_id = #{serverId,jdbcType=INTEGER}
    </update>
</mapper>